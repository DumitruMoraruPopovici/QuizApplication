<h2> Update a quiz </h1>
<form action="updateQuiz.jsp" method="post">
<div class="form-outline mb-4">
                             <input type="text" name="id" value="Enter Id..." onclick="this.value=''" required/>
                             <br/>
                         </div>
    <div class="form-outline mb-4">
                             <input type="text" name="name" value="Name..." onclick="this.value=''" required/>
                             <br/>
                         </div>
    <div class="form-outline mb-4">
               <input type="text" name="category" value="Category..." onclick="this.value=''" required/>
               <br/>
                   </div>

   <div class="form-outline mb-4">
                <input type="text" name="difficulty" value="Difficulty..." onclick="this.value=''" required/>
                <br/>
                    </div>

    <input type="submit" value="Update quiz" class="btn btn-primary btn-block" />
</form>



                            Question question = repository.findQuestionById(id);
                            question.setQuestionDescription(questionDescription);
                            question.setCategory(category);
                            question.setDifficulty(difficulty);
                            question.setCorrectAnswer(correctAnswer);
                            question.setIncorrectAnswer1(incorrectAnswer1);
                            question.setIncorrectAnswer2(incorrectAnswer2);
                            question.setIncorrectAnswer3(incorrectAnswer3);


                                                         try{
                                                        repository.updateQuestion(id, newCategory, newDifficulty, newCorrectAnswer, newIncorrectAnswer1, newIncorrectAnswer2, newIncorrectAnswer3, newQuestionDescription);
                                                                String confirmationMessageUpdateQuestion = "Your question has been updated.";
                                                                request.getSession().invalidate();
                                                                request.getSession().setAttribute("confirmationMessageUpdateQuestion", confirmationMessageUpdateQuestion);
                                                                response.sendRedirect("mainQuestion.jsp");

                                                            } catch(BusinessException e){

                                                                request.setAttribute("errorMessage", e.getMessage());
                                                                request.getRequestDispatcher("errorQuizAdd.jsp").forward(request, response);
                                                                    }
                                           %>
//public Question updateQuestion(String id, String newCategory, String newDifficulty, String newCorrectAnswer, String newIncorrectAnswer1, String newIncorrectAnswer2, String newIncorrectAnswer3, String newQuestionDescription) throws BusinessException {
//
//    entityManager.getTransaction().begin();
//    try {
//        Query query = entityManager.createQuery("SELECT q FROM Question q WHERE q.id ILIKE :id", Question.class);
//        query.setParameter("id", id);
//        Question question = (Question) query.getSingleResult();
//        if (id!= null) {
//
//            if (newCategory!=null) {
//                question.setCategory(newCategory);
//            } else {
//                throw new BusinessException("Question category cannot be null");
//            }
//            if (newDifficulty != null) {
//                question.setDifficulty(newDifficulty);
//            } else {
//                throw new BusinessException("Question category cannot be null");
//            }
//            if (newCorrectAnswer != null) {
//                question.setCorrectAnswer(newCorrectAnswer);
//            } else {
//                throw new BusinessException("Question correctAnswer cannot be null");
//            }
//            if (newIncorrectAnswer1 != null) {
//                question.setIncorrectAnswer1(newIncorrectAnswer1);
//            } else {
//                throw new BusinessException("Question incorrectAnswer1 cannot be null");
//            }
//            if (newIncorrectAnswer2 != null) {
//                question.setIncorrectAnswer2(newIncorrectAnswer2);
//            } else {
//                throw new BusinessException("Question incorrectAnswer2 cannot be null");
//            }
//            if (newIncorrectAnswer3 != null) {
//                question.setIncorrectAnswer3(newIncorrectAnswer3);
//            } else {
//                throw new BusinessException("Question incorrectAnswer3 cannot be null");
//            }
//            if (newQuestionDescription != null) {
//                question.setQuestionDescription(newQuestionDescription);
//            } else {
//                throw new BusinessException("Question question description cannot be null");
//            }
//            question = entityManager.merge(question);
//            entityManager.getTransaction().commit();
//            return question;
//        } else {
//            throw new BusinessException("Name and new name cannot be the same.");
//        }
//    } catch (NoResultException e) {
//        entityManager.getTransaction().rollback();
//        throw new BusinessException("Quiz cannot be found in database.");
//    }
//}